name: Test Comic Cruncher

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y poppler-utils unrar
        # Install dependencies for PyQt6
        sudo apt-get install -y libxcb-xinerama0 libgl1-mesa-glx

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install poppler unrar

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test imports
      run: |
        python -c "import PyQt6.QtWidgets; print('PyQt6: OK')"
        python -c "import PIL; print('Pillow: OK')"
        python -c "import pdf2image; print('pdf2image: OK')"
        python -c "import rarfile; print('rarfile: OK')"

    - name: Syntax check
      run: |
        python -m py_compile comic_cruncher.py

    - name: Test basic functionality (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        # Test that the application can start without errors
        timeout 10 python comic_cruncher.py --version || true

    - name: Test basic functionality (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Test basic import and class instantiation
        python -c "
        import sys
        from comic_cruncher import ComicCruncher
        print('Application classes imported successfully')
        "

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 comic_cruncher.py --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 comic_cruncher.py --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Check code formatting with black
      run: |
        black --check --diff comic_cruncher.py || true

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff comic_cruncher.py || true
